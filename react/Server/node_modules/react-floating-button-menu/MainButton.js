'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styledJss = require('styled-jss');

var _styledJss2 = _interopRequireDefault(_styledJss);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable react/no-unused-prop-types */


var Wrapper = (0, _styledJss2.default)('a')(function (_ref) {
  var background = _ref.background,
      size = _ref.size,
      iconColor = _ref.iconColor;
  return {
    color: iconColor,
    display: 'flex',
    border: 'none',
    borderRadius: '50%',
    boxShadow: '0 0 4px rgba(0,0,0,.14),0 4px 8px rgba(0,0,0,.28)',
    cursor: 'pointer',
    outline: 'none',
    padding: '0',
    WebkitUserDrag: 'none',
    fontWeight: 'bold',
    justifyContent: 'center',
    alignItems: 'center',
    width: size,
    height: size,
    background: background
  };
});

var IconWrapper = (0, _styledJss2.default)('div')(function (_ref2) {
  var isOpen = _ref2.isOpen;
  return {
    display: 'flex',
    position: 'absolute',
    WebkitTransition: '-webkit-transform 300ms',
    transition: 'transform 300ms',
    WebkitTransform: 'rotate(' + (isOpen ? 180 : 0) + 'deg)',
    transform: 'rotate(' + (isOpen ? 180 : 0) + 'deg)'
  };
});

var MainButton = function (_Component) {
  _inherits(MainButton, _Component);

  function MainButton() {
    _classCallCheck(this, MainButton);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  MainButton.prototype.render = function render() {
    var _props = this.props,
        iconResting = _props.iconResting,
        iconActive = _props.iconActive,
        isOpen = _props.isOpen;


    return _react2.default.createElement(
      Wrapper,
      this.props,
      _react2.default.createElement(
        IconWrapper,
        { isOpen: isOpen },
        isOpen ? iconActive : iconResting
      )
    );
  };

  return MainButton;
}(_react.Component);

MainButton.propTypes = {
  iconResting: _propTypes2.default.node.isRequired,
  iconActive: _propTypes2.default.node.isRequired,
  isOpen: _propTypes2.default.bool,
  size: _propTypes2.default.number
};
MainButton.defaultProps = {
  isOpen: false,
  size: 56
};
exports.default = MainButton;